[info]
typeName = "std::reference_wrapper<"
numTemplateParams = 1
ctype = "REF_WRAPPER_TYPE"
header = "functional"
ns = ["namespace std"]
replaceTemplateParamIndex = []
#Â allocatorIndex = 0
# underlyingContainerIndex = 0

[codegen]
decl = """
template<typename T>
void getSizeType(const %1%<T> &s_ptr, size_t& returnArg);
"""

func = """
template<typename T>
void getSizeType(const %1%<T> &ref, size_t& returnArg)
{
    SAVE_SIZE(sizeof(%1%<T>));
    SAVE_DATA((uintptr_t)&(ref.get()));
    getSizeType(ref.get(), returnArg);
}
"""
